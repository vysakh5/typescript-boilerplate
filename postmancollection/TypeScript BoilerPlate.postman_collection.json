{
	"info": {
		"_postman_id": "3fa3c331-703f-401c-8880-9072e7c6e07b",
		"name": "TypeScript BoilerPlate",
		"description": "## A BoilerPlate code for general purpose use.\n# Features\n* Used Typescript, Express, Mongoose \n* JWT Token with Session Stored in DB\n* Basics User Routes\n   * Signup, Signin, Change Password, Signout\n   * List all user, View Single User, Edit Use, Disable user, Enable User\n* Server side Validations",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User Section (Auth Section)",
			"item": [
				{
					"name": "signup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"pm.environment.set(\"email\", jsonData.data.email);\r",
									"pm.environment.set(\"userId\", jsonData.data._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\":\"{{$randomFirstName}}\",\r\n    \"lastName\":\"{{$randomLastName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"countryCode\":\"+91\",\r\n    \"phone\":\"9947525461\",\r\n    \"password\":\"123456\",\r\n    \"confirmPassword\":\"123456\",\r\n    \"role\":\"user\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/user/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"user",
								"signup"
							]
						},
						"description": "**All Fields are mandatory!!** \\\nPassword must be at least 6 digit \\\nRole is an enum its posible values are `super_admin`, `admin`, `user`"
					},
					"response": []
				},
				{
					"name": "signin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)\r",
									"pm.environment.set(\"access_token\", jsonData.data.accessToken);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"{{email}}\",\r\n    \"password\":\"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/user/signin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"user",
								"signin"
							]
						},
						"description": "Response have a token for other protected apis \n## Add This TOKEN to a custom header called `x-access-token`"
					},
					"response": []
				},
				{
					"name": "Get all user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Users finded\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    console.log(jsonData.data.console)\r",
									"    pm.expect(jsonData.message).to.eql(\"Users Find Successfully\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-access-token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/user/getalluser",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"user",
								"getalluser"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a single user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"user finded\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    console.log(jsonData.data.console)\r",
									"    pm.expect(jsonData.message).to.eql(\"Users Find Successfully\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-access-token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/user/getsingleuser?id={{userId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"user",
								"getsingleuser"
							],
							"query": [
								{
									"key": "id",
									"value": "{{userId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"User Updated\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    console.log(jsonData.data.console)\r",
									"    pm.expect(jsonData.message).to.eql(\"User Updated Successfully\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "x-access-token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":\"{{userId}}\",\r\n    \"lastName\":\"{{$randomLastName}}\",\r\n    \"phone\":\"9947525460\"\r\n    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/user/updateuser",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"user",
								"updateuser"
							]
						}
					},
					"response": []
				},
				{
					"name": "Disable user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 202\", function () {\r",
									"    pm.response.to.have.status(202);\r",
									"});\r",
									"pm.test(\"user Disabled\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"User Disabled Successfully\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-access-token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/user/disableuser?id={{toDisable}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"user",
								"disableuser"
							],
							"query": [
								{
									"key": "id",
									"value": "{{toDisable}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "enable user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 202\", function () {\r",
									"    pm.response.to.have.status(202);\r",
									"});\r",
									"pm.test(\"User Disabled\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"User Enabled Successfully\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "x-access-token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/user/enableuser?id={{toDisable}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"user",
								"enableuser"
							],
							"query": [
								{
									"key": "id",
									"value": "{{toDisable}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "change password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Password Changed\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Password Changed Successfully\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "x-access-token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\":\"615356f3c3720aebf1f5953e\",\r\n    \"oldPassword\":\"123456\",\r\n    \"newPassword\":\"123456\",\r\n    \"confirmPassword\":\"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/user/changepassword",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"user",
								"changepassword"
							]
						}
					},
					"response": []
				},
				{
					"name": "Signout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 202\", function () {\r",
									"    pm.response.to.have.status(202);\r",
									"});\r",
									"pm.test(\"User Signout\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"User Signout Successfully\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-access-token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/user/signout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"user",
								"signout"
							]
						}
					},
					"response": []
				}
			],
			"description": "*Need to add profile pic option*"
		},
		{
			"name": "general",
			"item": [
				{
					"name": "Ping",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Ping\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"pong\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-access-token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:4000/api/ping",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"ping"
							]
						}
					},
					"response": []
				}
			],
			"description": "## For Checking api working"
		}
	]
}